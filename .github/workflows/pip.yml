name: Pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build_mac:
    strategy:
      matrix:
        #python-version: ["3.5", "3.8", "3.9"]
        python-version: ["3.9"]
        ES_SETUP_INCLUDE_LIBRARIES: ["0", "1"]

    runs-on: macos-latest

    env:
      ES_SETUP_INCLUDE_LIBRARIES: ${{ matrix.ES_SETUP_INCLUDE_LIBRARIES }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Update Homebrew
      run: brew update

    - name: Install dependencies
      run: brew install libmad libpng jpeg-turbo SDL2 openal-soft

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Copy libraries from OS into lib and include
      if: matrix.ES_SETUP_INCLUDE_LIBRARIES == '1'
      run: python grab_libraries.py

    - name: Add requirements
      run: python -m pip install --upgrade wheel setuptools

    - name: Build and install
      run: pip install .[test]

    - name: Test
      run: pytest

  build_windows:
    strategy:
      matrix:
        #python-version: ["3.5", "3.8", "3.9"]
        python-version: ["3.9"]
        ES_SETUP_INCLUDE_LIBRARIES: ["1"]

    runs-on: windows-latest

    env:
      DIR_MINGW64: C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\x86_64-w64-mingw32
      DIR_ESLIB: .\dev64
      AR: gcc-ar
      ES_SETUP_INCLUDE_LIBRARIES: ${{ matrix.ES_SETUP_INCLUDE_LIBRARIES }}


    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Fetch development libraries
      run: |
        # thanks MCO
        Invoke-WebRequest https://endless-sky.github.io/win64-dev.zip -OutFile win64-dev.zip
        Expand-Archive win64-dev.zip -DestinationPath . -Force
        Remove-Item win64-dev.zip

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: specify mingw compiler to setuptools
      run: |
        "[build]`ncompiler=mingw32`n" | Out-File -FilePath setup.cfg

    - name: Add requirements
      run: python -m pip install --upgrade wheel setuptools

    - name: Copy libraries from OS into lib and include
      if: matrix.ES_SETUP_INCLUDE_LIBRARIES == '1'
      run: python grab_libraries.py

    - name: Build and install
      run: pip install --verbose .[test]

    - name: and in another dir
      working-directory: ./tests
      run: python testing.py

        #- name: Test
        #run: pytest

    #- name: Debugging
      #continue-on-error: true
      #run: |
       #python -v -I -c 'import endless_sky; import endless_sky.bindings'

  build_linux:
    strategy:
      matrix:
        #python-version: ["3.5", "3.8", "3.9"]
        python-version: ["3.9"]
        ES_SETUP_INCLUDE_LIBRARIES: ["0"]

    runs-on: ubuntu-latest

    env:
      ES_SETUP_INCLUDE_LIBRARIES: ${{ matrix.ES_SETUP_INCLUDE_LIBRARIES }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/* && sudo dpkg --clear-avail
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libsdl2-dev libpng-dev libjpeg-turbo8-dev libopenal-dev libmad0-dev libglew-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev uuid-dev

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Add requirements
      run: python -m pip install --upgrade wheel setuptools

    - name: Copy libraries from OS into lib and include
      if: matrix.ES_SETUP_INCLUDE_LIBRARIES == '1'
      run: python grab_libraries.py

    - name: Build and install
      run: pip install --verbose .[test]

    - name: Test
      run: pytest
